// <auto-generated />
using System;
using GamesManager.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamesManager.Migrations.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.DeveloperStudio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeveloperStudios");
                });

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeveloperStudioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperStudioId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.Game", b =>
                {
                    b.HasOne("GamesManager.Contracts.Data.Entities.DeveloperStudio", "DeveloperStudio")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperStudioId");

                    b.Navigation("DeveloperStudio");
                });

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.GameGenre", b =>
                {
                    b.HasOne("GamesManager.Contracts.Data.Entities.Game", null)
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.DeveloperStudio", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GamesManager.Contracts.Data.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
